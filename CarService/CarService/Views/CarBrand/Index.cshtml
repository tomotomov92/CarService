@model IEnumerable<CarService.Models.CarBrandModel>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    var userId = @HttpContextAccessor.HttpContext.Session.GetInt32(BusinessLogic.Constants.SessionKeyUserId);
    var userName = @HttpContextAccessor.HttpContext.Session.GetString(BusinessLogic.Constants.SessionKeyUserName);
    var userRole = BusinessLogic.Enums.UserRoles.NA;
    var userRoleInt = @HttpContextAccessor.HttpContext.Session.GetInt32(BusinessLogic.Constants.SessionKeyUserRole);
    if (userRoleInt != null)
    {
        userRole = (BusinessLogic.Enums.UserRoles)userRoleInt;
    }

    ViewData["Title"] = "Car Brands";
    <h1>Car Brands</h1>

    switch (userRole)
    {
        case BusinessLogic.Enums.UserRoles.Owner:
            <p>
                <a asp-action="Create">Create New</a>
            </p>
            break;
    }
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BrandName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BrandName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                <td>
                    @switch (userRole)
                    {
                        case BusinessLogic.Enums.UserRoles.Owner:
                            {
                                @Html.ActionLink("Details", "Details", new { id = item.Id }) @Html.Raw(" | ")
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) @Html.Raw(" | ")
                                if (item.Archived == false)
                                {
                                    @Html.ActionLink("Archive", "Archive", new { id = item.Id }) @Html.Raw(" | ")
                                }
                                else
                                {
                                    @Html.ActionLink("Unarchive", "Unarchive", new { id = item.Id }) @Html.Raw(" | ")
                                }
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                            }
                            break;
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
