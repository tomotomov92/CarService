@model IEnumerable<CarService.Models.CarModel>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    var userId = @HttpContextAccessor.HttpContext.Session.GetInt32(BusinessLogic.Constants.SessionKeyUserId);
    var userName = @HttpContextAccessor.HttpContext.Session.GetString(BusinessLogic.Constants.SessionKeyUserName);
    var userRole = BusinessLogic.Enums.UserRoles.NA;
    var userRoleInt = @HttpContextAccessor.HttpContext.Session.GetInt32(BusinessLogic.Constants.SessionKeyUserRole);
    if (userRoleInt != null)
    {
        userRole = (BusinessLogic.Enums.UserRoles)userRoleInt;
    }
}

@{
    ViewData["Title"] = "Client Cars";
}

<h1>Client Cars</h1>

@switch (userRole)
{
    case BusinessLogic.Enums.UserRoles.Customer:
        <p>
            @Html.ActionLink("Add Car", "Create", "Car", new { clientId = userId })
        </p>
        break;
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Client.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LicensePlate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CarBrand.BrandName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mileage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Client.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LicensePlate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CarBrand.BrandName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Mileage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                @if (item.Archived == false)
                {
                    <td>
                        @Html.ActionLink("Schedule Inspection", "Create", "Inspection", new { clientId = item.ClientId, carId = item.Id }) |
                        @Html.ActionLink("Inspections", "CarInspections", "Inspection", new { carId = item.Id }) |
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                }
                else
                {
                    <td>
                        @Html.ActionLink("Inspections", "CarInspections", "Inspection", new { carId = item.Id }) |
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
